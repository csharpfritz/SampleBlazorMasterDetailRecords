@page "/orders"
@inject HttpClient HttpClient
@using SampleBlazorUI.Shared

<h1>Orders</h1>

@if (MyOrders == null)
{
    <span>Orders are loading...</span>
}
else
{

    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Customer</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in MyOrders)
            {
                var currentRowClassName = "";
                @if (order.Id == currentId)
                {
                    currentRowClassName = "text-danger";
                }
                <tr class="@currentRowClassName">
                    <td>@order.Id</td>
                    <td>@order.CustomerName</td>
                    <td><button class="btn btn-info btn-sm" @onclick="() => GetDetails(order.Id)">Details</button></td>
                </tr>
            }
        </tbody>
    </table>

    @if (Items != null && Items.Any())
    {

        <h2>Line Items</h2>

        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price USD</th>
                    <th>Qty</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Items)
                {
                    <tr>
                        <td>@item.Product</td>
                        <td class="text-right">@item.PriceUSD.ToString("$0.00")</td>
                        <td class="text-right">@item.Quantity</td>
                        <td class="text-right">@item.TotalPrice.ToString("$0.00")</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3"></td>
                    <td class="text-right">@Items.Sum(i => i.TotalPrice).ToString("$0.00")</td>
                </tr>
            </tfoot>
        </table>

    }

}

@code {

    Order[] MyOrders { get; set; }

    OrderItem[] Items { get; set; }

    int? currentId = null;

    protected override async Task OnInitializedAsync()
    {

        MyOrders = await HttpClient.GetJsonAsync<Order[]>("/api/orders");

    }

    public async Task GetDetails(int id)
    {
        currentId = id;
        Items = await HttpClient.GetJsonAsync<OrderItem[]>($"/api/orders/{id}");

    }


}
